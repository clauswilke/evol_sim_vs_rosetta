install . packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library("ggplot2")
R version
R.version
R.version
R update()
R.update
getwd()
install.packages("phylolm")
source('~/Desktop/test/results_50/getResult1_new.R')
source('~/Desktop/test/results_50/getResult1_new.R')
source('~/Desktop/test/results_50/getResult1_new.R')
source('~/Desktop/test/results_50/getResult1_new.R')
---
library(rgl)
library(rgl)
install.packages('rgl')
library(rgl)
library("rgl", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install.packages('rgl')
library(rgl)
vec <- c(5,3,2,3,5,6,7,8)
vec
df <- data.frame(col1=vec,col2=vec*2)
df
df
vec <- c(5,3,2,3,5,6,7,8)
vec
df <- data.frame(col1=vec,col2=vec*2)
df
source('~/Desktop/test1.R')
source('~/Desktop/test1.R')
vec[3]
vec > 4
vec[vec > 4]
vec[vec > 4]
vec <- c(5,3,2,3,5,6,7,8)
?sum
manual_seq <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
auto_seq <- seq(from = 1, to = 10, by = 1)
manual_seq
auto_seq
head(CO2)   # Gives a snapshot of the data frame
CO2$Plant # Let's you extract a column of the data frame
plot(x = CO2$Type, y = CO2$uptake)
bad_read <- read.csv("~/Downloads/1_intro_r/ex1_calories.csv")
bad_read
bad_read$calories
class(bad_read$calories)
library(readr)
install.packages("readr")
library(readr)
good_read <- read.csv("~/Downloads/1_intro_r/ex1_calories.csv")
good_read
plot(x = good_read$date, y = good_read$calories)
plot(x = good_read$calories, y = good_read$date)
install.packages('rgl')
library(rgl)
sessionInfo()
install.packages('rgl')
library(rgl)
library(rgl)
library(rgl)
library(rgl)
comet <- readOBJ(url("http://sci.esa.int/science-e/www/object/doc.cfm?fobjectid=54726"))
open3d()
shade3d(comet, col="gray")
library(rgl)
comet <- readOBJ(url("http://sci.esa.int/science-e/www/object/doc.cfm?fobjectid=54726"))
open3d()
shade3d(comet, col="gray")
comet <- readOBJ("~/Downloads/ESA_Rosetta_OSIRIS_67P_SHAP2P.obj.txt")
open3d()
library(rgl)
comet <- readOBJ(url("http://sci.esa.int/science-e/www/object/doc.cfm?fobjectid=54726"))
open3d()
shade3d(comet, col="gray")
head(CO2)
CO2$Plant
CO2$Type
plot(x = x_variable, y = y_variable)
plot(x = CO2$Type, y = CO2$uptake)
?boxplot
boxplot(count ~ spray, data = InsectSprays, col = "lightgray")
count ~ spray
InsectSprays
boxplot(count ~ spray, data = InsectSprays,
notch = TRUE, add = TRUE, col = "blue")
boxplot(count ~ spray, data = InsectSprays, notch = TRUE, add = TRUE, col = "blue")
boxplot(decrease ~ treatment, data = OrchardSprays,
log = "y", col = "bisque")
OrchardSprays
boxplot(rowpos ~ treatment, data = OrchardSprays,
log = "y", col = "bisque")
boxplot(len ~ dose, data = ToothGrowth,
boxwex = 0.25, at = 1:3 - 0.2,
subset = supp == "VC", col = "yellow",
main = "Guinea Pigs' Tooth Growth",
xlab = "Vitamin C dose mg",
ylab = "tooth length",
xlim = c(0.5, 3.5), ylim = c(0, 35), yaxs = "i")
boxplot(len ~ dose, data = ToothGrowth, add = TRUE,
boxwex = 0.25, at = 1:3 + 0.2,
subset = supp == "OJ", col = "orange")
legend(2, 9, c("Ascorbic acid", "Orange juice"),
fill = c("yellow", "orange"))
CO2
head(CO2)
boxplot(uptake ~ Type, data = CO2)
boxplot(Treatment ~ Type, data = CO2)
boxplot(uptake ~ Treatment, data = CO2)
boxplot(uptake ~ conc, data = CO2)
bad_read <- read.csv("~/Desktop/rstats/1_intro_r/ex1_calories.csv")
bad_read
plot(x = bad_read$date, y = bad_read$calories)
good_read <- read_csv("~/Desktop/rstats/1_intro_r/ex1_calories.csv")
library(readr)
good_read <- read_csv("~/Desktop/rstats/1_intro_r/ex1_calories.csv")
good_read
plot(x = good_read$date, y = good_read$calories)
class(bad_read$calories)
class(bad_read$date)
bad_read$calories
?read_csv
third_read <- read_csv("~/Desktop/rstats/1_intro_r/ex1_calories.csv", na = c("X"))
plot(x = third_read$date, y = third_read$calories)
plot(x = good_read$date, y = good_read$calories)
auto_seq <- seq(from = 1, to = 100, by = 2)
auto_seq
library(readr)
csv_data <- read_csv("20160304.csv")
csv_data <- read_csv("~/Downloads/2016_09_hadleyverse/20160304.csv")
csv_data <- read_csv("~/Desktop/20160304.csv")
View(csv_data)
View(csv_data)
head(csv_data)
str(csv_data)
?write_csv
?filter
library(nycflights13)
install.packages("nycflights13")
library(nycflights13)
library(dplyr)
install.packages("dplyr")
library(dplyr)
library(dplyr)
data("flights")
data("flights")
flights
head(flights)
str(flights)
select(flights, day, month)
filter(flights, month == 1, day == 10)
reduced <- filter(flights, month == 1, day == 10)
months <- group_by(flights, dest)
View(reduced)
View(reduced)
View(months)
summarise(months, avg.distance = mean(distance), sd.distance = sd(distance))
View(flights)
View(reduced)
View(months)
new_data_frame <- mutate(flights,
new_data_frame <- mutate(flights,
gain = arr_delay - dep_delay,
speed = distance / air_time * 60)
View(new_data_frame)
head(frights)
head(flights)
flights %>% head()
flights %>%
group_by(year, month, day) %>%
select(arr_delay, dep_delay) %>%
summarise(
arr = mean(arr_delay, na.rm = TRUE),
dep = mean(dep_delay, na.rm = TRUE)
) %>%
filter(arr > 30 | dep > 30)
library(tidyr)
install.packages("tidyr")
library(tidyr)
nutrition_wide <- read_tsv("nutrition_wide.tsv")
nutrition_wide <- read_tsv("~/Downloads/2016_09_hadleyverse/nutrition_wide.tsv")
head(nutrition_wide)
str(nutrition_wide)
nutrition_long <- gather(nutrition_wide, "vitamin", "amount", 2:6)
nutrition_long <- nutrition_wide %>%
gather("vitamin", "amount", 2:6)
head(nutrition_long)
str(nutrition_long)
nutrition_long
View(nutrition_wide)
View(nutrition_long)
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
head(flights)
plot <- ggplot(flights, aes(x=distance, y=air_time))
plot + geom_point()
plot + geom_point(size = .5)
library(cowplot)
install.packages("cowplot")
library(cowplot)
flights %>%
group_by(month, tailnum) %>%
summarise(count = n(), dist = mean(distance, na.rm=TRUE), delay = mean(arr_delay, na.rm = TRUE)) %>%
filter(count > 20, dist < 2000) %>%
ggplot(aes(x=dist, y=delay)) +
geom_point(aes(size = count), alpha = 1/2) +
geom_smooth() +
scale_size_area()
library("rstan")
install.packages("rstan")
library("rstan")
dotR <- file.path(Sys.getenv("HOME"), ".R")
if (!file.exists(dotR)) dir.create(dotR)
M <- file.path(dotR, "Makevars")
if (!file.exists(M)) file.create(M)
cat("\nCXXFLAGS=-O3 -mtune=native -march=native -Wno-unused-variable -Wno-unused-function",
file = M, sep = "\n", append = TRUE)
cat(readLines(M), sep = "\n")
cat(M)
Sys.setenv(MAKEFLAGS = "-j1")
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies=TRUE)
fx <- inline::cxxfunction( signature(x = "integer", y = "numeric" ) , '
return ScalarReal( INTEGER(x)[0] * REAL(y)[0] ) ;
' )
fx( 2L, 5 )
library("rstan")
library(shinystan)
library(ggplot2)
library(dplyr)
set.seed(101)
fake_data <- rnorm(n = 3, mean = 2, sd = 2)
fake_data # look at it
likelihood <- function(mu, sigma, data_values){
prod( dnorm(data_values, mean = mu, sd = sigma) )
}
likelihood(mu = 0.5, sigma = 0.3, data_values = fake_data)
likelihood(mu = -1, sigma = 0.1, data_values = fake_data)
likelihood <- function(mu, sigma, data_values){
prod( dnorm(data_values, mean = mu, sd = sigma) )
}
prior <- function(mu, sigma,
mu.prior.mean = -1,
mu.prior.sd = 1,
sigma.prior.sd = 1){
# normal prior on mu, half-normal prior on sigma
dnorm(mu, mean = mu.prior.mean, sd = mu.prior.sd) *
2*dnorm(abs(sigma), mean = 0, sd = sigma.prior.sd)
}
posterior <- function(mu, sigma, data_values,
mu.prior.mean = -1,
mu.prior.sd = 1,
sigma.prior.sd = 1){
likelihood(mu, sigma, data_values) *
prior(mu, sigma, mu.prior.mean, mu.prior.sd, sigma.prior.sd)
}
bayes_plot(fake_data, mu.prior.sd = 0.1)
library(rstan)
library(shinystan)
library(ggplot2)
library(dplyr)
bayes_plot(fake_data, mu.prior.sd = 0.1)
read.csv("~/Desktop/500_test/duncan_analysis/unordered_analysis/graph_data_1B4T_A_evolved.csv")
read.csv("~/Desktop/500_test/duncan_analysis/unordered_analysis/graph_data_1B4T_A_evolved.csv")
data <- read.csv("~/Desktop/500_test/duncan_analysis/unordered_analysis/graph_data_1B4T_A_evolved.csv")
View(data)
View(data)
setwd("~/Downloads/")
setwd("~/Desktop/rate4site_test/")
ls
ls()
library(tidyr)
library(ggplot2)
library(dplyr)
library(cowplot)
library(bio3d)
r1 <- read.table(paste0("1HUJ_A_norm_rates.txt"),skip=13,sep="\t")
View(r1)
View(r1)
r <- r1 %>% separate(V1,into=c("c1","c2","c3","c4","c5","c6","c7","c8"),sep="\\][:blank:]*|[:blank:]*\\[[:blank:]*|\\,[:blank:]*|[:blank:]+",extra="drop") %>% separate(c8,into=c("c8","c9"),sep="\\/") %>% select(-c(c1,c9))
View(r)
View(r)
remove(r)
r <- r1 %>% separate(V1, into=c("c1","c2","c3","c4","c5","c6","c7"),sep="\\][[:blank:]\\,",extra = "warn")
r <- r1 %>% separate(V1, into=c("c1","c2","c3","c4","c5","c6","c7"),extra = "warn")
View(r)
r <- r1 %>% separate(V1, into=c("c1","c2","c3","c4","c5","c6","c7"),sep="\\][:blank:]*|[:blank:]*\\[[:blank:]*|\\,[:blank:]*|[:blank:]+",extra = "warn")
View(r)
View(r)
r <- r1 %>% separate(V1, into=c("c1","c2","c3","c4","c5","c6","c7"),sep="\\][:blank:]*|[:blank:]*\\[[:blank:]*|\\,[:blank:]*|[:blank:]+",extra = "warn") %>% separate(c7,into=c("c7","c8"),sep="\\/") %>% select(-c(c1,c8))
View(r)
r <- r1 %>% separate(V1, into=c("c1","c2","c3","c4","c5","c6","c7","c8"),sep="\\][:blank:]*|[:blank:]*\\[[:blank:]*|\\,[:blank:]*|[:blank:]+",extra = "warn") %>% separate(c7,into=c("c7","c8"),sep="\\/") %>% select(-c(c1,c9))
View(r)
View(r)
t1 <- list.files("natural_prot/r4s_rates/",pattern="norm_rates")
t1 <- list.files("natural_prot/r4s_rates/",pattern="norm_rates")
print(t1)
r1 <- read.table(paste0("natural_prot/r4s_rates/",t1[1]),skip=11,sep="\t")
View(r1)
View(r1)
r <- r1 %>% separate(V1,into=c("c1","c2","c3","c4","c5","c6","c7","c8"),sep="\\][:blank:]*|[:blank:]*\\[[:blank:]*|\\,[:blank:]*|[:blank:]+",extra="drop") %>%
separate(c8,into=c("c8","c9"),sep="\\/") %>%
select(-c(c1,c9))
View(r)
r2 <- read.table(paste0("natural_prot/r4s_rates/",t1[2]),skip=13,sep="\t")
View(r2)
r <- r1 %>% separate(V1,into=c("c1","c2","c3","c4","c5","c6","c7","c8"),sep="\\][:blank:]*|[:blank:]*\\[[:blank:]*|\\,[:blank:]*|[:blank:]+",extra="drop") %>%
+     separate(c8,into=c("c8","c9"),sep="\\/") %>%
+     select(-c(c1,c9))
rr <- r2 %>% separate(V1,into=c("c1","c2","c3","c4","c5","c6","c7","c8"),sep="\\][:blank:]*|[:blank:]*\\[[:blank:]*|\\,[:blank:]*|[:blank:]+",extra="drop") %>%
+     separate(c8,into=c("c8","c9"),sep="\\/") %>%
+     select(-c(c1,c9))
View(r2)
s <- r2 %>% separate(V1,into=c("c1","c2","c3","c4","c5","c6","c7","c8"),sep="\\][:blank:]*|[:blank:]*\\[[:blank:]*|\\,[:blank:]*|[:blank:]+",extra="drop") %>%
+     separate(c8,into=c("c8","c9"),sep="\\/") %>%
+     select(-c(c1,c9))
s <- r2 %>% separate(V1,into=c("c1","c2","c3","c4","c5","c6","c7","c8"),sep="\\][:blank:]*|[:blank:]*\\[[:blank:]*|\\,[:blank:]*|[:blank:]+",extra="drop") %>%
+     separate(c8,into=c("c8","c9"),sep="\\/") %>%
+     select(-c(c1,c9))
s <- r2 %>% separate(V1,into=c("c1","c2","c3","c4","c5","c6","c7","c8"),sep="\\][:blank:]*|[:blank:]*\\[[:blank:]*|\\,[:blank:]*|[:blank:]+",extra="drop") %>%
separate(c8,into=c("c8","c9"),sep="\\/") %>%
select(-c(c1,c9))
View(s)
getwd()
setwd("~/Desktop/500_test/t_test/")
natural <- read.csv("graph_mean_data_natural.csv", header = TRUE)
View(natural)
natural <- read.csv("graph_mean_data_natural.csv", header = TRUE, sep = "")
View(natural)
remove(r)
remove(r1)
remove(r2)
remove(s)
remove(t1)
evolved <- read.csv("graph_mean_data_evolved.csv", header = TRUE, sep = "")
rosetta <- read.csv("graph_mean_data_rosetta.csv", header = TRUE, sep = "")
View(evolved)
View(rosetta)
t.test(natural$mean_entropy, evolved$mean_entropy, paired = TRUE)
entropy_n_vs_e <- t.test(natural$mean_entropy, evolved$mean_entropy, paired = TRUE)
View(entropy_n_vs_e)
entropy_n_vs_r <- t.test(natural$mean_entropy, rosetta$mean_entropy, paired = TRUE)
t.test(natural$mean_entropy, rosetta$mean_entropy, paired = TRUE)
t.test(natural$cor_entropy_RSA, evolved$cor_entropy_RSA, paired = T, alternative = c("less"))
t.test(natural$cor_entropy_RSA, evolved$cor_entropy_RSA, paired = T, alternative = c("greater"))
t.test(natural$cor_entropy_RSA, rosetta$cor_entropy_RSA, paired = T, alternative = c("greater"))
t.test(evolved$cor_entropy_RSA, rosetta$cor_entropy_RSA, paired = T, alternative = c("greater"))
t.test(evolved$cor_entropy_RSA, natural$cor_entropy_RSA, paired = T, alternative = c("greater"))
t.test(evolved$mean_entropy, natural$mean_entropy, paired = T, alternative = c("greater"))
t.test(evolved$mean_entropy, natural$mean_entropy, paired = T, alternative = c("less"))
t.test((evolved$cor_entropy_RSA - natural$cor_entropy_RSA), (natural$cor_entropy_RSA - rosetta$cor_entropy_RSA), paired = T, alternative = c("less"))
t.test((evolved$cor_entropy_RSA - natural$cor_entropy_RSA), (natural$cor_entropy_RSA - rosetta$cor_entropy_RSA), paired = T)
t.test((natural$mean_entropy - evolved$mean_entropy), (natural$mean_entropy - rosetta$mean_entropy), paired = T)
t.test((natural$mean_entropy - evolved$mean_entropy), (natural$mean_entropy - rosetta$mean_entropy), paired = T, alternative = c("less"))
t.test((evolved$cor_entropy_RSA - natural$cor_entropy_RSA), (natural$cor_entropy_RSA - rosetta$cor_entropy_RSA), paired = T, alternative = c("less"))
t.test((evolved$cor_entropy_icn - natural$cor_entropy_icn), (natural$cor_entropy_icn - rosetta$cor_entropy_icn), paired = T, alternative = c("less"))
t.test((evolved$cor_entropy_icn - natural$cor_entropy_icn), (rosetta$cor_entropy_icn - natural$cor_entropy_icn), paired = T, alternative = c("less"))
t.test(evolved$cor_entropy_icn, natural$cor_entropy_icn, paired = T)
t.test(natural$cor_entropy_icn, rosetta$cor_entropy_icn, paired = T)
t.test(evolved$cor_entropy_icn, rosetta$cor_entropy_icn, paired = T, alternative = c("greater"))
t.test(natural$cor_entropy_iwcn, rosetta$cor_entropy_iwcn, paired = T)
t.test(natural$cor_entropy_iwcn, evolved$cor_entropy_iwcn, paired = T)
t.test((evolved$cor_entropy_iwcn - natural$cor_entropy_iwcn), (natural$cor_entropy_iwcn - rosetta$cor_entropy_iwcn), paired = T, alternative = c("less"))
t.test(rosetta$cor_entropy_iwcn, evolved$cor_entropy_iwcn, paired = T,alternative = c("less"))
anova(natural$mean_entropy, evolved$mean_entropy, rosetta$mean_entropy)
mean_entropy <- c(natural$mean_entropy, evolved$mean_entropy, rosetta$mean_entropy)
remove(mean_entropy)
mean_entropy <- merge(natural$mean_entropy, evolved$mean_entropy, rosetta$mean_entropy, by = "PDB")
all_data <- merge(natural, evolved, rosetta, by = c("PDB", "chain", "mean_RSA"))
entropy <- select(natrual, PDB, chain, mean_entropy)
entropy <- select(natural, PDB, chain, mean_entropy)
View(entropy)
remove(entropy)
entropy <- mutate(natural, PDB = PDB, natual_entropy = mean_entropy)
View(entropy)
remove(entropy)
entropy <- select(natural, PDB, mean_entropy) %>% rename(natural_entropy = mean_entropy)
View(entropy)
entropy <- select(evolved, mean_entropy) %>% rename(evolved_entropy = mean_entropy)
entropy <- select(natural, PDB, mean_entropy) %>% rename(natural_entropy = mean_entropy)
View(entropy)
entropy <- select(evolved, mean_entropy) %>% mutate(evolved_entropy = mean_entropy)
remove(entropy)
entropy_natural <- select(natural, PDB, mean_entropy) %>% rename(natural_n = mean_entropy)
View(entropy_natural)
entropy_evolved <- select(evolved, PDB, mean_entropy) %>% rename(natural_e = mean_entropy)
View(entropy_evolved)
entropy_rosetta <- select(rosetta, PDB, mean_entropy) %>% rename(natural_r = mean_entropy)
View(entropy_rosetta)
entropy <- full_join(entropy_natural, entropy_evolved, entropy_roestta, by = "PDB")
View(entropy)
entropy <- full_join(entropy, entropy_roestta, by = "PDB")
entropy <- full_join(entropy, entropy_rosetta, by = "PDB")
View(entropy)
remove(entropy)
remove(entropy_evolved)
remove(entropy_natural)
remove(entropy_rosetta)
X <- c(natural$mean_entropy, evolved$mean_entropy, rosetta$mean_entropy)
A <- factor(rep(1:3, each=38))
entropy_data <- data.frame(X, A)
View(entropy_data)
A <- factor(rep(1:3, each=38),labels = ("natural","evolved","rosetta"))
A <- factor(rep(1:3, each=38, labels = ("natural","evolved","rosetta")))
A <- factor(rep(("natural","evolved","rosetta"), each=38)
A <- factor(rep(1:3, each=38), labels = c("natural","evolved","rosetta"))
entropy_data <- data.frame(X, A)
View(entropy_data)
aov.entropy <- aov(X~A, data = entropy_data)
summary(aov.entropy)
plot(entropy_data$X~entropy_data$A)
pairwise.t.test(X, A, p.adjust.method="bonferroni")
pairwise.t.test(X, A, p.adjust.method="none")
TukeyHSD(aov(X~A, entropy_data))
> X <- c(natural$cor_entropy_RSA, evolved$cor_entropy_RSA, rosetta$cor_entropy_RSA)
X <- c(natural$cor_entropy_RSA, evolved$cor_entropy_RSA, rosetta$cor_entropy_RSA)
cor_entropy_RSA_data <- data.frame(X, A)
View(cor_entropy_RSA_data)
aov.rsa <- aov(X~A, data = cor_entropy_RSA_data)
summary(aov.rsa)
pairwise.t.test(X, A, p.adjust.method="bonferroni")
X <- c(natural$cor_entropy_icn, evolved$cor_entropy_icn, rosetta$cor_entropy_icn)
cor_entropy_icn_data <- data.frame(X, A)
View(cor_entropy_icn_data)
aov.icn <- aov(X~A, data = cor_entropy_icn_data)
summary(aov.icn)
pairwise.t.test(X, A, p.adjust.method="bonferroni")
X <- c(natural$cor_entropy_iwcn, evolved$cor_entropy_iwcn, rosetta$cor_entropy_iwcn)
cor_entropy_iwcn_data <- data.frame(X, A)
View(cor_entropy_iwcn_data)
aov.iwcn <- aov(X~A, data = cor_entropy_iwcn_data)
summary(aov.iwcn)
pairwise.t.test(X, A, p.adjust.method="bonferroni")
cor_entropy <- read.csv("graph_entropy_corr.csv", header = TRUE, sep = "")
View(cor_entropy)
KL_unorder <- read.csv("graph_mean_KL_all_method_data.csv", header = TRUE, sep = "")
View(KL_unorder)
X <- c(KL_unorder$mean_KL_split_natural, KL_unorder$mean_KL_method_evolved, KL_unorder$mean_KL_method_rosetta)
KL_unorder_data <- data.frame(X, A)
aov.kl <- aov(X~A, data = KL_unorder_data)
summary(aov.kl)
pairwise.t.test(X, A, p.adjust.method="bonferroni")
KL_ordered <- read.csv("graph_mean_KL_all_method_data_ordered.csv", header = TRUE, sep = "")
View(KL_ordered)
X <- c(KL_ordered$mean_KL_split_natural, KL_ordered$mean_KL_method_evolved, KL_ordered$mean_KL_method_rosetta)
KL_ordered_data <- data.frame(X, A)
aov.kl_ordered <- aov(X~A, data = KL_ordered_data)
summary(aov.kl_ordered)
pairwise.t.test(X, A, p.adjust.method="bonferroni")
View(cor_entropy)
X <- c(cor_entropy$natural_evolved_corr, cor_entropy$natural_rosetta_corr, cor_entropy$rosetta_evolved_corr)
A <- factor(rep(1:3, each=38), labels = c("natural_evolved_corr","natural_rosetta_corr","rosetta_evolved_corr"))
cor_entropy_data <- data.frame(X, A)
View(cor_entropy_data)
aov.cor_entropy <- aov(X~A, data = cor_entropy_data)
summary(aov.cor_entropy)
pairwise.t.test(X, A, p.adjust.method="bonferroni")
setwd("~/Desktop/500_test/t_test/")
library(tidyr)
library(ggplot2)
library(dplyr)
natural <- read.csv("graph_mean_data_natural.csv", header = TRUE, sep = "")
evolved <- read.csv("graph_mean_data_evolved.csv", header = TRUE, sep = "")
rosetta <- read.csv("graph_mean_data_rosetta.csv", header = TRUE, sep = "")
A <- factor(rep(1:3, each=38), labels = c("natural","evolved","rosetta"))
X <- c(natural$cor_entropy_RSA, evolved$cor_entropy_RSA, rosetta$cor_entropy_RSA)
cor_entropy_RSA_data <- data.frame(X, A)
View(cor_entropy_RSA_data)
t.test
t.test(evolved$cor_entropy_RSA, natural$cor_entropy_RSA, alternative = c("greater"),paired = TRUE)
t.test(evolved$cor_entropy_RSA, rosetta$cor_entropy_RSA, alternative = c("greater"),paired = TRUE)
t.test(evolved$cor_entropy_iwcn, natural$cor_entropy_iwcn, paired = TRUE)
t.test(evolved$cor_entropy_iwcn, natural$cor_entropy_iwcn, alternative = c("greater") paired = TRUE)
t.test(evolved$cor_entropy_iwcn, natural$cor_entropy_iwcn, alternative = c("greater"), paired = TRUE)
t.test(evolved$cor_entropy_iwcn, natural$cor_entropy_iwcn, alternative = c("less"), paired = TRUE)
knitr::spin("t_test.R")
knitr::spin("t_test.R")
library(tidyr)
library(ggplot2)
library(dplyr)
#' DATA
# read data
natural <- read.csv("graph_mean_data_natural.csv", header = TRUE, sep = "")
evolved <- read.csv("graph_mean_data_evolved.csv", header = TRUE, sep = "")
rosetta <- read.csv("graph_mean_data_rosetta.csv", header = TRUE, sep = "")
cor_entropy <- read.csv("graph_entropy_corr.csv", header = TRUE, sep = "")
t.test(cor_entropy$natural_evolved_corr, cor_entropy$natural_rosetta_corr, alternative = c("greater"),paired = TRUE)
# paired t-test
t.test(cor_entropy$natural_evolved_corr, cor_entropy$natural_rosetta_corr, alternative = c("less"),paired = TRUE)
t.test(cor_entropy$natural_evolved_corr, cor_entropy$natural_rosetta_corr,paired = TRUE)
